/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.backend.Db4oUtils;
import model.backend.OperatingSystem;
import model.dealer.Store;
import model.root.Customer;
import model.root.Employee;
import model.root.Enterprise;
import model.root.Enterprise.EnterpriseType;
import model.root.IdChecker;
import model.root.Person;
import model.root.Person.UserRole;
import model.root.StoreManager;

/**
 *
 * @author pho3nix28
 */
public class RegionalEmployeeManagement extends javax.swing.JPanel {

    /**
     * Creates new form CreateEmployee
     */
    String gender;
    OperatingSystem operatingSystem;
    Db4oUtils dB4OUtility;
    private List<Store> stores;
    
    public RegionalEmployeeManagement() {
    }
    
    public RegionalEmployeeManagement(Db4oUtils db ,OperatingSystem os) {
        initComponents();
        this.operatingSystem = os;
        this.dB4OUtility = db;
        populateTable();
        stores = operatingSystem.getStoreDirectory();
        populateRoleComboBox();
        managingStoreLabel.setVisible(false);
        managingStoreComboBox.setVisible(false);
        regEmployeeManSSNText.setEditable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regEmployeeManUsernameText = new javax.swing.JTextField();
        regEmployeeManPasswordText = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        regEmployeeManMaleRadioButton = new javax.swing.JRadioButton();
        regEmployeeManFemaleRadioButton = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        regEmployeeManOtherRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        regEmployeeManBirthText = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        regEmployeeManPhoneText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        regEmployeeManEmailText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        regEmployeeManAddressText = new javax.swing.JTextField();
        regEmployeeManNameText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        regEmployeeManCreateButton = new javax.swing.JButton();
        regEmployeeManViewButton = new javax.swing.JButton();
        regEmployeeManUpdateButton = new javax.swing.JButton();
        regEmployeeManDeleteButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        regEmployeeManSSNText = new javax.swing.JTextField();
        managingStoreLabel = new javax.swing.JLabel();
        managingStoreComboBox = new javax.swing.JComboBox<>();
        regRoleComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(32, 33, 35));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Password:");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Date of Birth:");

        regEmployeeManMaleRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManMaleRadioButton.setText("Male");
        regEmployeeManMaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManMaleRadioButtonActionPerformed(evt);
            }
        });

        regEmployeeManFemaleRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManFemaleRadioButton.setText("Female");
        regEmployeeManFemaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManFemaleRadioButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gender:");

        regEmployeeManOtherRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManOtherRadioButton.setText("Other");
        regEmployeeManOtherRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManOtherRadioButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Phone Number:");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Email:");

        regEmployeeManPhoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManPhoneTextActionPerformed(evt);
            }
        });
        regEmployeeManPhoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                regEmployeeManPhoneTextKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Address:");

        regEmployeeManEmailText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                regEmployeeManEmailTextFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Username:");

        regEmployeeManNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                regEmployeeManNameTextFocusLost(evt);
            }
        });
        regEmployeeManNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManNameTextActionPerformed(evt);
            }
        });
        regEmployeeManNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                regEmployeeManNameTextKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name:");

        lblTitle1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Employee Management");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Role:");

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Employee Role", "Email", "Gender"
            }
        ));
        jScrollPane1.setViewportView(tblEmployee);

        regEmployeeManCreateButton.setBackground(new java.awt.Color(126, 87, 194));
        regEmployeeManCreateButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        regEmployeeManCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManCreateButton.setText("Create");
        regEmployeeManCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManCreateButtonActionPerformed(evt);
            }
        });

        regEmployeeManViewButton.setBackground(new java.awt.Color(126, 87, 194));
        regEmployeeManViewButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        regEmployeeManViewButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManViewButton.setText("View");
        regEmployeeManViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManViewButtonActionPerformed(evt);
            }
        });

        regEmployeeManUpdateButton.setBackground(new java.awt.Color(126, 87, 194));
        regEmployeeManUpdateButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        regEmployeeManUpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManUpdateButton.setText("Update");
        regEmployeeManUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManUpdateButtonActionPerformed(evt);
            }
        });

        regEmployeeManDeleteButton.setBackground(new java.awt.Color(126, 87, 194));
        regEmployeeManDeleteButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        regEmployeeManDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        regEmployeeManDeleteButton.setText("Delete");
        regEmployeeManDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regEmployeeManDeleteButtonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("SSN:");

        managingStoreLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        managingStoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        managingStoreLabel.setText("Managing Store:");

        regRoleComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                regRoleComboBoxItemStateChanged(evt);
            }
        });
        regRoleComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regRoleComboBoxMouseClicked(evt);
            }
        });
        regRoleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regRoleComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(304, 304, 304)
                                .addComponent(regEmployeeManViewButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(managingStoreLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(regEmployeeManMaleRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(regEmployeeManFemaleRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(regEmployeeManOtherRadioButton))
                                            .addComponent(regEmployeeManPasswordText)
                                            .addComponent(regEmployeeManPhoneText)
                                            .addComponent(regEmployeeManBirthText, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                            .addComponent(regEmployeeManEmailText)
                                            .addComponent(regEmployeeManAddressText)
                                            .addComponent(regEmployeeManUsernameText)
                                            .addComponent(managingStoreComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(regRoleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(regEmployeeManNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                            .addComponent(regEmployeeManSSNText))))))
                        .addGap(0, 232, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                            .addComponent(jSeparator1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addComponent(regEmployeeManCreateButton)
                .addGap(30, 30, 30)
                .addComponent(regEmployeeManUpdateButton)
                .addGap(31, 31, 31)
                .addComponent(regEmployeeManDeleteButton)
                .addContainerGap(210, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle1)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(regEmployeeManViewButton)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(regEmployeeManNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(regEmployeeManSSNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(regEmployeeManMaleRadioButton)
                    .addComponent(regEmployeeManFemaleRadioButton)
                    .addComponent(regEmployeeManOtherRadioButton))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(regEmployeeManBirthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regEmployeeManPhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(regEmployeeManEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regEmployeeManAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regEmployeeManUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regEmployeeManPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(regRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managingStoreLabel)
                    .addComponent(managingStoreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regEmployeeManCreateButton)
                    .addComponent(regEmployeeManUpdateButton)
                    .addComponent(regEmployeeManDeleteButton))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void regEmployeeManMaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManMaleRadioButtonActionPerformed
        // TODO add your handling code here:
        if(regEmployeeManMaleRadioButton.isSelected()){
            gender = "Male";
            regEmployeeManFemaleRadioButton.setSelected(false);
            regEmployeeManOtherRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_regEmployeeManMaleRadioButtonActionPerformed

    private void regEmployeeManFemaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManFemaleRadioButtonActionPerformed
        // TODO add your handling code here:
        if(regEmployeeManFemaleRadioButton.isSelected()){
            gender = "Female";
            regEmployeeManMaleRadioButton.setSelected(false);
            regEmployeeManOtherRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_regEmployeeManFemaleRadioButtonActionPerformed

    private void regEmployeeManOtherRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManOtherRadioButtonActionPerformed
        // TODO add your handling code here:
        if(regEmployeeManOtherRadioButton.isSelected()){
            gender = "Other";
            regEmployeeManMaleRadioButton.setSelected(false);
            regEmployeeManFemaleRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_regEmployeeManOtherRadioButtonActionPerformed

    private void regEmployeeManPhoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManPhoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regEmployeeManPhoneTextActionPerformed

    private void regEmployeeManPhoneTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regEmployeeManPhoneTextKeyPressed
        // TODO add your handling code here:

        String phoneNumber = regEmployeeManPhoneText.getText();
        int lengthOfNumber = phoneNumber.length();
        char checkChar = evt.getKeyChar();
        if (checkChar >= '0' && checkChar <= '9') {
            if (lengthOfNumber < 10) {
                regEmployeeManPhoneText.setEditable(true);
            } else {
                regEmployeeManPhoneText.setEditable(false);
                JOptionPane.showMessageDialog(this, "Cannot add more than 10 Numbers!");
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                regEmployeeManPhoneText.setEditable(true);
            } else {
                regEmployeeManPhoneText.setEditable(false);
            }
        }
    }//GEN-LAST:event_regEmployeeManPhoneTextKeyPressed

    private void regEmployeeManEmailTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_regEmployeeManEmailTextFocusLost
        // TODO add your handling code here:

        String emailFormat ="^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^-]+(?:\\."+ "[a-zA-Z0-9_!#$%&'*+/=?`{|}~^-]+)*@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$";
        Pattern employeeEmail = Pattern.compile(emailFormat) ;
        Matcher employeeEmailMatch = employeeEmail.matcher(regEmployeeManEmailText.getText());

        if (!employeeEmailMatch.matches()){
            JOptionPane.showMessageDialog(null,"Invalid Email!");
            regEmployeeManEmailText.setText("");
        }
    }//GEN-LAST:event_regEmployeeManEmailTextFocusLost

    private void regEmployeeManNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_regEmployeeManNameTextFocusLost
        // TODO add your handling code here:

        Pattern p = Pattern.compile("[^A-Za-z ]");
        Matcher m = p.matcher(regEmployeeManNameText.getText());
        // boolean b = m.matches();
        boolean b = m.find();
        if (b){
            JOptionPane.showMessageDialog(null,"Special Characters are not allowed.");
            regEmployeeManNameText.setText("");
        }
    }//GEN-LAST:event_regEmployeeManNameTextFocusLost

    private void regEmployeeManNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regEmployeeManNameTextKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_regEmployeeManNameTextKeyPressed

    private void regEmployeeManDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManDeleteButtonActionPerformed
        // TODO add your handling code here:
        
        int selected = tblEmployee.getSelectedRow();
        List<Person> person = operatingSystem.getPersonDirectory().stream()
                .filter(p -> UserRole.valueOf(p.getRole()).equals(UserRole.ACCOUNT_VERIFYER) || UserRole.valueOf(p.getRole()).equals(UserRole.STORE_MANAGER)).toList();
        Person p = person.get(selected);
        

        operatingSystem.deletePersonFromPersonDirectory(p);
         dB4OUtility.storeSystem(operatingSystem);

            
        JOptionPane.showMessageDialog(this, "Employee Data Deleted!!!");

        populateTable();

        regEmployeeManNameText.setText("");
        regEmployeeManSSNText.setText("");
        regEmployeeManMaleRadioButton.setSelected(false);
        regEmployeeManFemaleRadioButton.setSelected(false);
        regEmployeeManOtherRadioButton.setSelected(false);
        regEmployeeManPhoneText.setText("");
        regEmployeeManEmailText.setText("");
        regEmployeeManAddressText.setText("");
        regEmployeeManUsernameText.setText("");
        regEmployeeManPasswordText.setText("");
        regEmployeeManBirthText.setCalendar(null);
    }//GEN-LAST:event_regEmployeeManDeleteButtonActionPerformed

    private void regEmployeeManViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManViewButtonActionPerformed
        // TODO add your handling code here:
        regEmployeeManSSNText.setEditable(false);
        
        
        int selected = tblEmployee.getSelectedRow();
        List<Person> person = operatingSystem.getPersonDirectory().stream()
                .filter(p -> UserRole.valueOf(p.getRole()).equals(UserRole.ACCOUNT_VERIFYER) || UserRole.valueOf(p.getRole()).equals(UserRole.STORE_MANAGER)).toList();
        Person p = person.get(selected);
        
        regEmployeeManNameText.setText(p.getName());
        regEmployeeManSSNText.setText(String.valueOf(p.getSsn()));
        regEmployeeManPhoneText.setText(String.valueOf(p.getPhoneNo()));
        regEmployeeManEmailText.setText(p.getEmail());
        regEmployeeManAddressText.setText(p.getAddress());
        regEmployeeManUsernameText.setText(p.getUsername());
        regEmployeeManPasswordText.setText(p.getPassword());
        regEmployeeManBirthText.setDate(p.getDob());
        regRoleComboBox.setSelectedItem(p.getRole());
        
        if(gender == "Male"){
            regEmployeeManMaleRadioButton.setSelected(true);
        }
        if(gender == "Female"){
            regEmployeeManFemaleRadioButton.setSelected(true);
        }
        if(gender == "Other"){
            regEmployeeManOtherRadioButton.setSelected(true);
        }
        

    }//GEN-LAST:event_regEmployeeManViewButtonActionPerformed

    private void regEmployeeManNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regEmployeeManNameTextActionPerformed

    private void regEmployeeManUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManUpdateButtonActionPerformed
        // TODO add your handling code here:
        Person updatedPerson;
        String name = regEmployeeManNameText.getText();
        long ssn = Long.parseLong(regEmployeeManSSNText.getText());
        String personGender = gender;
        Date dob = regEmployeeManBirthText.getDate();
        long phoneNumber = Long.parseLong(regEmployeeManPhoneText.getText());
        String email = regEmployeeManEmailText.getText();
        String address = regEmployeeManAddressText.getText();
        String username = regEmployeeManUsernameText.getText();
        String password = new String(regEmployeeManPasswordText.getPassword());
        String role = regRoleComboBox.getSelectedItem().toString();
                
        Person person1 = operatingSystem.getPersonDirectory().stream()
                .filter(p-> p.getSsn() == ssn).findFirst().orElse(null);
        
        if((role.equals("IDChecker") && person1.getRole().equals(Person.UserRole.STORE_MANAGER.name()))){
            
            String dealerId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.DEALER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new IdChecker(dealerId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.ACCOUNT_VERIFYER.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
        } else if((role.equals("Store Manager") && person1.getRole().equals(Person.UserRole.ACCOUNT_VERIFYER.name()))){
            String managingStoreName = managingStoreComboBox.getSelectedItem().toString();
            String managingStoreId = stores.stream().filter(store -> store.getName().equals(managingStoreName)).findFirst().orElse(null).getId();
            updatedPerson = new StoreManager(managingStoreId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.STORE_MANAGER.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
        } else{
             person1.setName(name);
             person1.setGender(gender);
             person1.setAddress(address);
             person1.setDob(dob);
             person1.setEmail(email);
             person1.setSsn(ssn);
             person1.setUsername(username);
             person1.setPassword(password);
             person1.setPhoneNo(phoneNumber);
        }
        
        dB4OUtility.storeSystem(operatingSystem);
        populateTable();
        JOptionPane.showMessageDialog(this, "Data Updated");
        regEmployeeManNameText.setText("");
        regEmployeeManSSNText.setText("");
        regEmployeeManMaleRadioButton.setSelected(false);
        regEmployeeManFemaleRadioButton.setSelected(false);
        regEmployeeManOtherRadioButton.setSelected(false);
        regEmployeeManPhoneText.setText("");
        regEmployeeManEmailText.setText("");
        regEmployeeManAddressText.setText("");
        regEmployeeManUsernameText.setText("");
        regEmployeeManPasswordText.setText("");
        regEmployeeManBirthText.setCalendar(null);
          
    }//GEN-LAST:event_regEmployeeManUpdateButtonActionPerformed

    private void regEmployeeManCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regEmployeeManCreateButtonActionPerformed
        // TODO add your handling code here:
        
        String name = regEmployeeManNameText.getText();
        long ssn = Long.parseLong(regEmployeeManSSNText.getText());
        String personGender = gender;
        Date dob = regEmployeeManBirthText.getDate();
        long phoneNumber = Long.parseLong(regEmployeeManPhoneText.getText());
        String email = regEmployeeManEmailText.getText();
        String address = regEmployeeManAddressText.getText();
        String username = regEmployeeManUsernameText.getText();
        String password = new String(regEmployeeManPasswordText.getPassword());
        String uuid = UUID.randomUUID().toString();
        String role = regRoleComboBox.getSelectedItem().toString();
        
        
        if(role.equals("IDChecker")){
            String dealerId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.DEALER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            Person person = new IdChecker(dealerId, ssn, uuid, name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.ACCOUNT_VERIFYER.name());
            operatingSystem.addPersonToPersonDirectory(person);
            dB4OUtility.storeSystem(operatingSystem);
            OperatingSystem os= dB4OUtility.retrieveSystem();
            
        }
        if(role.equals("Store Manager")){
            String managingStoreName = managingStoreComboBox.getSelectedItem().toString();
            String managingStoreId = stores.stream().filter(store -> store.getName().equals(managingStoreName)).findFirst().orElse(null).getId();
            Person person = new StoreManager(managingStoreId, ssn, uuid, name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.STORE_MANAGER.name());
            operatingSystem.addPersonToPersonDirectory(person);
            dB4OUtility.storeSystem(operatingSystem);
            OperatingSystem os= dB4OUtility.retrieveSystem();
            
        }
        

        JOptionPane.showMessageDialog(this, "Data Created");
        populateTable();
        regEmployeeManNameText.setText("");
        regEmployeeManSSNText.setText("");
        regEmployeeManMaleRadioButton.setSelected(false);
        regEmployeeManFemaleRadioButton.setSelected(false);
        regEmployeeManOtherRadioButton.setSelected(false);
        regEmployeeManPhoneText.setText("");
        regEmployeeManEmailText.setText("");
        regEmployeeManAddressText.setText("");
        regEmployeeManUsernameText.setText("");
        regEmployeeManPasswordText.setText("");
        regEmployeeManBirthText.setCalendar(null);
        
        
    }//GEN-LAST:event_regEmployeeManCreateButtonActionPerformed

    private void regRoleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regRoleComboBoxActionPerformed

        if(regRoleComboBox.getSelectedItem().toString().equals("Store Manager"))
        {
            stores.forEach(store -> managingStoreComboBox.addItem(store.getName()));
            managingStoreLabel.setVisible(true);
            managingStoreComboBox.setVisible(true);
        }
        else{
            managingStoreComboBox.removeAllItems();
            managingStoreComboBox.setSelectedIndex(-1);
            managingStoreLabel.setVisible(false);
            managingStoreComboBox.setVisible(false);
        }
    }//GEN-LAST:event_regRoleComboBoxActionPerformed

    private void regRoleComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_regRoleComboBoxItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_regRoleComboBoxItemStateChanged

    private void regRoleComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regRoleComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_regRoleComboBoxMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JComboBox<String> managingStoreComboBox;
    private javax.swing.JLabel managingStoreLabel;
    private javax.swing.JTextField regEmployeeManAddressText;
    private com.toedter.calendar.JDateChooser regEmployeeManBirthText;
    private javax.swing.JButton regEmployeeManCreateButton;
    private javax.swing.JButton regEmployeeManDeleteButton;
    private javax.swing.JTextField regEmployeeManEmailText;
    private javax.swing.JRadioButton regEmployeeManFemaleRadioButton;
    private javax.swing.JRadioButton regEmployeeManMaleRadioButton;
    private javax.swing.JTextField regEmployeeManNameText;
    private javax.swing.JRadioButton regEmployeeManOtherRadioButton;
    private javax.swing.JPasswordField regEmployeeManPasswordText;
    private javax.swing.JTextField regEmployeeManPhoneText;
    private javax.swing.JTextField regEmployeeManSSNText;
    private javax.swing.JButton regEmployeeManUpdateButton;
    private javax.swing.JTextField regEmployeeManUsernameText;
    private javax.swing.JButton regEmployeeManViewButton;
    private javax.swing.JComboBox<String> regRoleComboBox;
    private javax.swing.JTable tblEmployee;
    // End of variables declaration//GEN-END:variables
 private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);
        List<Person> persons = operatingSystem.getPersonDirectory().stream()
                .filter(p -> UserRole.valueOf(p.getRole()).equals(UserRole.ACCOUNT_VERIFYER) || UserRole.valueOf(p.getRole()).equals(UserRole.STORE_MANAGER)).toList();
         
        for ( Person person : persons){

            Object[] row =  new Object[8];
            row[0] = person.getName();
            row[1] = person.getRole();
            row[2] = person.getEmail();
            row[3] = person.getGender();

            model.addRow(row);


        }
        
    }

    private void populateRoleComboBox() {
        regRoleComboBox.addItem("IDChecker");
        regRoleComboBox.addItem("Store Manager");
        regRoleComboBox.setSelectedIndex(0);
    }



}


