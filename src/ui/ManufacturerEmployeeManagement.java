/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.backend.Db4oUtils;
import model.backend.OperatingSystem;
import model.root.ApprovalEmployee;
import model.root.Assembler;
import model.root.Enterprise.EnterpriseType;
import model.root.FulfillmentOfficer;
import model.root.Person;
import model.root.Person.UserRole;

/**
 *
 * @author pho3nix28
 */
public class ManufacturerEmployeeManagement extends javax.swing.JPanel {
    
    String gender;
    OperatingSystem operatingSystem;
    Db4oUtils dB4OUtility;
    /**
     * Creates new form RegulatorEmployeeManagement
     */
    
    public ManufacturerEmployeeManagement(){
        
    }
    public ManufacturerEmployeeManagement(Db4oUtils db ,OperatingSystem os) {
        initComponents();
        this.operatingSystem = os;
        this.dB4OUtility = db;
        populateTable();
        manEmpSSNText.setEditable(true);
        manEmpDeleteButton.setVisible(false);
        manEmpUpdateButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manEmpRoleCombo = new javax.swing.JComboBox<>();
        manEmpCreateButton = new javax.swing.JButton();
        manEmpUpdateButton = new javax.swing.JButton();
        manEmpDeleteButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        manEmpBirthText = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        manEmpPhoneText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        manEmpEmailText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        manEmpAddressText = new javax.swing.JTextField();
        manEmpUsernameText = new javax.swing.JTextField();
        manEmpPasswordText = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        manEmpMaleRadioButton = new javax.swing.JRadioButton();
        manEmpFemaleRadioButton = new javax.swing.JRadioButton();
        manEmpOtherRadioButton = new javax.swing.JRadioButton();
        manEmpNameText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        manEmpViewButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        lblTitle1 = new javax.swing.JLabel();
        manEmpSSNText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(32, 33, 35));

        manEmpRoleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "APPROVAL AFFAIRS OFFICER", "ASSEMBLER", "FULFILLMENT OFFICER" }));

        manEmpCreateButton.setBackground(new java.awt.Color(126, 87, 194));
        manEmpCreateButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        manEmpCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpCreateButton.setText("Create");
        manEmpCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpCreateButtonActionPerformed(evt);
            }
        });

        manEmpUpdateButton.setBackground(new java.awt.Color(126, 87, 194));
        manEmpUpdateButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        manEmpUpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpUpdateButton.setText("Update");
        manEmpUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpUpdateButtonActionPerformed(evt);
            }
        });

        manEmpDeleteButton.setBackground(new java.awt.Color(126, 87, 194));
        manEmpDeleteButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        manEmpDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpDeleteButton.setText("Delete");
        manEmpDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpDeleteButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Phone Number:");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Email:");

        manEmpPhoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpPhoneTextActionPerformed(evt);
            }
        });
        manEmpPhoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                manEmpPhoneTextKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Address:");

        manEmpEmailText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                manEmpEmailTextFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Username:");

        manEmpAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpAddressTextActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Password:");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Date of Birth:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Role:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gender:");

        manEmpMaleRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpMaleRadioButton.setText("Male");
        manEmpMaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpMaleRadioButtonActionPerformed(evt);
            }
        });

        manEmpFemaleRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpFemaleRadioButton.setText("Female");
        manEmpFemaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpFemaleRadioButtonActionPerformed(evt);
            }
        });

        manEmpOtherRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpOtherRadioButton.setText("Other");
        manEmpOtherRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpOtherRadioButtonActionPerformed(evt);
            }
        });

        manEmpNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                manEmpNameTextFocusLost(evt);
            }
        });
        manEmpNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                manEmpNameTextKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name:");

        manEmpViewButton.setBackground(new java.awt.Color(126, 87, 194));
        manEmpViewButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        manEmpViewButton.setForeground(new java.awt.Color(255, 255, 255));
        manEmpViewButton.setText("View");
        manEmpViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manEmpViewButtonActionPerformed(evt);
            }
        });

        tblEmployee.setBackground(new java.awt.Color(255, 255, 255));
        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Role", "Email", "Phone Number"
            }
        ));
        jScrollPane1.setViewportView(tblEmployee);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        lblTitle1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Employee Management");

        manEmpSSNText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                manEmpSSNTextFocusLost(evt);
            }
        });
        manEmpSSNText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                manEmpSSNTextKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("SSN:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jSeparator1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(manEmpSSNText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(manEmpMaleRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(manEmpFemaleRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(manEmpOtherRadioButton))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(manEmpPasswordText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(manEmpPhoneText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(manEmpBirthText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(manEmpEmailText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(manEmpAddressText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(manEmpUsernameText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(manEmpRoleCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(manEmpNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 233, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(manEmpViewButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(manEmpDeleteButton)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manEmpCreateButton)
                    .addComponent(manEmpUpdateButton))
                .addGap(294, 294, 294))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle1)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manEmpViewButton)
                    .addComponent(manEmpDeleteButton))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(manEmpNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(manEmpSSNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(manEmpMaleRadioButton)
                    .addComponent(manEmpFemaleRadioButton)
                    .addComponent(manEmpOtherRadioButton))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(manEmpBirthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manEmpPhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manEmpEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manEmpAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manEmpUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manEmpPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(manEmpRoleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(manEmpCreateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manEmpUpdateButton)
                .addContainerGap(101, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manEmpDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selected = tblEmployee.getSelectedRow();
        List<Person> person = operatingSystem.getPersonDirectory().stream()
                .filter(p -> UserRole.valueOf(p.getRole()).equals(UserRole.APPROVAL_EMPLOYEE) || UserRole.valueOf(p.getRole()).equals(UserRole.ASSEMBLER)|| UserRole.valueOf(p.getRole()).equals(UserRole.FULFILMENT_OFFICER)).toList();
        Person p = person.get(selected);
        

        operatingSystem.deletePersonFromPersonDirectory(p);
         dB4OUtility.storeSystem(operatingSystem);

            
        JOptionPane.showMessageDialog(this, "Employee Data Deleted!!!");

        populateTable();

        manEmpNameText.setText("");
        manEmpSSNText.setText("");
        manEmpMaleRadioButton.setSelected(false);
        manEmpFemaleRadioButton.setSelected(false);
        manEmpOtherRadioButton.setSelected(false);
        manEmpPhoneText.setText("");
        manEmpEmailText.setText("");
        manEmpAddressText.setText("");
        manEmpUsernameText.setText("");
        manEmpPasswordText.setText("");
        manEmpBirthText.setCalendar(null);
        
        
        manEmpDeleteButton.setVisible(false);
        manEmpUpdateButton.setVisible(false);
        manEmpCreateButton.setVisible(true);
    }//GEN-LAST:event_manEmpDeleteButtonActionPerformed

    private void manEmpPhoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpPhoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manEmpPhoneTextActionPerformed

    private void manEmpPhoneTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manEmpPhoneTextKeyPressed
        // TODO add your handling code here:

        String phoneNumber = manEmpPhoneText.getText();
        int lengthOfNumber = phoneNumber.length();
        char checkChar = evt.getKeyChar();
        if (checkChar >= '0' && checkChar <= '9') {
            if (lengthOfNumber < 10) {
                manEmpPhoneText.setEditable(true);
            } else {
                manEmpPhoneText.setEditable(false);
                JOptionPane.showMessageDialog(this, "Cannot add more than 10 Numbers!");
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                manEmpPhoneText.setEditable(true);
            } else {
                manEmpPhoneText.setEditable(false);
            }
        }
    }//GEN-LAST:event_manEmpPhoneTextKeyPressed

    private void manEmpEmailTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_manEmpEmailTextFocusLost
        // TODO add your handling code here:

        String emailFormat ="^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^-]+(?:\\."+ "[a-zA-Z0-9_!#$%&'*+/=?`{|}~^-]+)*@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$";
        Pattern employeeEmail = Pattern.compile(emailFormat) ;
        Matcher employeeEmailMatch = employeeEmail.matcher(manEmpEmailText.getText());

        if (!employeeEmailMatch.matches()){
            JOptionPane.showMessageDialog(null,"Invalid Email!");
            manEmpEmailText.setText("");
        }
    }//GEN-LAST:event_manEmpEmailTextFocusLost

    private void manEmpMaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpMaleRadioButtonActionPerformed
        // TODO add your handling code here:
        if(manEmpMaleRadioButton.isSelected()){
            gender = "Male";
            manEmpFemaleRadioButton.setSelected(false);
            manEmpOtherRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_manEmpMaleRadioButtonActionPerformed

    private void manEmpFemaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpFemaleRadioButtonActionPerformed
        // TODO add your handling code here:
        if(manEmpFemaleRadioButton.isSelected()){
            gender = "Female";
            manEmpMaleRadioButton.setSelected(false);
            manEmpOtherRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_manEmpFemaleRadioButtonActionPerformed

    private void manEmpOtherRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpOtherRadioButtonActionPerformed
        // TODO add your handling code here:
        if(manEmpOtherRadioButton.isSelected()){
            gender = "Other";
            manEmpMaleRadioButton.setSelected(false);
            manEmpFemaleRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_manEmpOtherRadioButtonActionPerformed

    private void manEmpNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_manEmpNameTextFocusLost
        // TODO add your handling code here:

        Pattern p = Pattern.compile("[^A-Za-z ]");
        Matcher m = p.matcher(manEmpNameText.getText());
        // boolean b = m.matches();
        boolean b = m.find();
        if (b){
            JOptionPane.showMessageDialog(null,"Special Characters are not allowed.");
            manEmpNameText.setText("");
        }
    }//GEN-LAST:event_manEmpNameTextFocusLost

    private void manEmpNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manEmpNameTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_manEmpNameTextKeyPressed

    private void manEmpViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpViewButtonActionPerformed
        // TODO add your handling code here:
        manEmpMaleRadioButton.setSelected(false);
        manEmpFemaleRadioButton.setSelected(false);
        manEmpOtherRadioButton.setSelected(false);
        manEmpUpdateButton.setVisible(true);
        manEmpDeleteButton.setVisible(true);
        manEmpCreateButton.setVisible(false);
        manEmpSSNText.setEditable(false);
        
        int selected = tblEmployee.getSelectedRow();
        List<Person> person = operatingSystem.getPersonDirectory().stream()
                .filter(p -> UserRole.valueOf(p.getRole()).equals(UserRole.FULFILMENT_OFFICER) || UserRole.valueOf(p.getRole()).equals(UserRole.ASSEMBLER)|| UserRole.valueOf(p.getRole()).equals(UserRole.APPROVAL_EMPLOYEE)).toList();
        Person p = person.get(selected);
        
        manEmpNameText.setText(p.getName());
        manEmpSSNText.setText(String.valueOf(p.getSsn()));
        manEmpPhoneText.setText(String.valueOf(p.getPhoneNo()));
        manEmpEmailText.setText(p.getEmail());
        manEmpAddressText.setText(p.getAddress());
        manEmpUsernameText.setText(p.getUsername());
        manEmpPasswordText.setText(p.getPassword());
        manEmpBirthText.setDate(p.getDob());
        manEmpRoleCombo.setSelectedItem(p.getRole());
        
        if(p.getGender().equals("Male")){
           manEmpMaleRadioButton.setSelected(true);

        }else if(p.getGender().equals("Female")){
            manEmpFemaleRadioButton.setSelected(true);
        
    } else{
            manEmpOtherRadioButton.setSelected(true);
        
    }
    }//GEN-LAST:event_manEmpViewButtonActionPerformed

    private void manEmpAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpAddressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manEmpAddressTextActionPerformed

    private void manEmpCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpCreateButtonActionPerformed
        // TODO add your handling code here:
        if(manEmpNameText.getText().equals("") || manEmpSSNText.getText().equals("") 
                 || manEmpPasswordText.getText().equals("") || manEmpPhoneText.getText().equals("") 
                 || manEmpEmailText.getText().equals("") || manEmpAddressText.getText().equals("") 
                 || manEmpUsernameText.getText().equals("") || manEmpBirthText.getDate().equals("")){
             

              JOptionPane.showMessageDialog(this,"Please Complete the Form");
              return;
         }
        
        String name = manEmpNameText.getText();
        long ssn = Long.parseLong(manEmpSSNText.getText());
        String personGender = gender;
        Date dob = manEmpBirthText.getDate();
        long phoneNumber = Long.parseLong(manEmpPhoneText.getText());
        String email = manEmpEmailText.getText();
        String address = manEmpAddressText.getText();
        String username = manEmpUsernameText.getText();
        String password = new String(manEmpPasswordText.getPassword());
        String uuid = UUID.randomUUID().toString();
        String role = manEmpRoleCombo.getSelectedItem().toString();
        if(role.equals("APPROVAL AFFAIRS OFFICER")){
            String dealerId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            Person person = new ApprovalEmployee(dealerId, ssn, uuid, name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.APPROVAL_EMPLOYEE.name());
            operatingSystem.addPersonToPersonDirectory(person);
            dB4OUtility.storeSystem(operatingSystem);
            OperatingSystem os= dB4OUtility.retrieveSystem();
            
        }
        if(role.equals("ASSEMBLER")){
            
            String dealerId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            Person person = new Assembler(dealerId, ssn, uuid, name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.ASSEMBLER.name());
            operatingSystem.addPersonToPersonDirectory(person);
            dB4OUtility.storeSystem(operatingSystem);
            OperatingSystem os= dB4OUtility.retrieveSystem();
            
        }
        if(role.equals( "FULFILLMENT OFFICER")){
            
            String dealerId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            Person person = new FulfillmentOfficer(dealerId, ssn, uuid, name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.FULFILMENT_OFFICER.name());
            operatingSystem.addPersonToPersonDirectory(person);
            dB4OUtility.storeSystem(operatingSystem);
            OperatingSystem os= dB4OUtility.retrieveSystem();
            
        }
        
        JOptionPane.showMessageDialog(this, "Data Created");
        populateTable();
        manEmpNameText.setText("");
        manEmpSSNText.setText("");
        manEmpMaleRadioButton.setSelected(false);
        manEmpFemaleRadioButton.setSelected(false);
        manEmpOtherRadioButton.setSelected(false);
        manEmpPhoneText.setText("");
        manEmpEmailText.setText("");
        manEmpAddressText.setText("");
        manEmpUsernameText.setText("");
        manEmpPasswordText.setText("");
        manEmpBirthText.setCalendar(null);
    }//GEN-LAST:event_manEmpCreateButtonActionPerformed

    private void manEmpSSNTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_manEmpSSNTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_manEmpSSNTextFocusLost

    private void manEmpSSNTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manEmpSSNTextKeyPressed
        // TODO add your handling code here:
           String phoneNumber = manEmpSSNText.getText();
        int lengthOfNumber = phoneNumber.length();
        char checkChar = evt.getKeyChar();
        if (checkChar >= '0' && checkChar <= '9') {
            if (lengthOfNumber < 10) {
                manEmpSSNText.setEditable(true);
            } else {
                manEmpSSNText.setEditable(false);
                JOptionPane.showMessageDialog(this, "Cannot add more than 10 Numbers!");
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                manEmpSSNText.setEditable(true);
            } else {
                manEmpSSNText.setEditable(false);
            }
        }
    }//GEN-LAST:event_manEmpSSNTextKeyPressed

    private void manEmpUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manEmpUpdateButtonActionPerformed
        // TODO add your handling code here:
         if(manEmpNameText.getText().equals("") || manEmpSSNText.getText().equals("") 
                 || manEmpPasswordText.getText().equals("") || manEmpPhoneText.getText().equals("") 
                 || manEmpEmailText.getText().equals("") || manEmpAddressText.getText().equals("") 
                 || manEmpUsernameText.getText().equals("") || manEmpBirthText.getDate().equals("")){
             

              JOptionPane.showMessageDialog(this,"Please View any Data");
        manEmpNameText.setText("");
        manEmpSSNText.setText("");
        manEmpMaleRadioButton.setSelected(false);
        manEmpFemaleRadioButton.setSelected(false);
        manEmpOtherRadioButton.setSelected(false);
        manEmpPhoneText.setText("");
        manEmpEmailText.setText("");
        manEmpAddressText.setText("");
        manEmpUsernameText.setText("");
        manEmpPasswordText.setText("");
        manEmpBirthText.setCalendar(null);
              return;
         }
        
        Person updatedPerson;
        String name = manEmpNameText.getText();
        long ssn = Long.parseLong(manEmpSSNText.getText());
        String personGender = gender;
        Date dob = manEmpBirthText.getDate();
        long phoneNumber = Long.parseLong(manEmpPhoneText.getText());
        String email = manEmpEmailText.getText();
        String address = manEmpAddressText.getText();
        String username = manEmpUsernameText.getText();
        String password = new String(manEmpPasswordText.getPassword());
        String role = manEmpRoleCombo.getSelectedItem().toString();
        
        Person person1 = operatingSystem.getPersonDirectory().stream()
                .filter(p-> p.getSsn() == ssn).findFirst().orElse(null);
        
        if((role.equals("APPROVAL AFFAIRS OFFICER") && person1.getRole().equals(Person.UserRole.ASSEMBLER.name()))){
            
            String regulatorId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new Assembler(regulatorId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.APPROVAL_EMPLOYEE.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
            
        } else if((role.equals("APPROVAL AFFAIRS OFFICER") && person1.getRole().equals(Person.UserRole.FULFILMENT_OFFICER.name()))){
            String regulatorId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new FulfillmentOfficer(regulatorId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.APPROVAL_EMPLOYEE.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
            
        } else if((role.equals("ASSEMBLER") && person1.getRole().equals(Person.UserRole.APPROVAL_EMPLOYEE.name()))){
            
            String regulatorId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new ApprovalEmployee(regulatorId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.ASSEMBLER.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
            
        } else if((role.equals("ASSEMBLER") && person1.getRole().equals(Person.UserRole.FULFILMENT_OFFICER.name()))){
            String regulatorId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new ApprovalEmployee(regulatorId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.ASSEMBLER.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
            
        } else if((role.equals("FULFILLMENT OFFICER") && person1.getRole().equals(Person.UserRole.ASSEMBLER.name()))){
            
            String regulatorId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new FulfillmentOfficer(regulatorId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.FULFILMENT_OFFICER.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
            
        } else if((role.equals("FULFILLMENT OFFICER") && person1.getRole().equals(Person.UserRole.APPROVAL_EMPLOYEE.name()))){
            String regulatorId = operatingSystem.getEnterpriseDirectory().stream()
                    .filter(ent -> EnterpriseType.valueOf(ent.getEnterpriseType()).equals(EnterpriseType.MANUFACTURER))
                    .findFirst()
                    .orElse(null).getEnterpriseId();
            updatedPerson = new FulfillmentOfficer(regulatorId, ssn, person1.getPuid(), name, personGender, dob, phoneNumber, email, address, username, password, Person.UserRole.FULFILMENT_OFFICER.name());
            operatingSystem.deletePersonFromPersonDirectory(person1);
            operatingSystem.addPersonToPersonDirectory(updatedPerson);
            
        } else{
             person1.setName(name);
             person1.setGender(gender);
             person1.setAddress(address);
             person1.setDob(dob);
             person1.setEmail(email);
             person1.setSsn(ssn);
             person1.setUsername(username);
             person1.setPassword(password);
             person1.setPhoneNo(phoneNumber);
        }
        
        dB4OUtility.storeSystem(operatingSystem);
        populateTable();
        JOptionPane.showMessageDialog(this, "Data Updated");
        manEmpNameText.setText("");
        manEmpSSNText.setText("");
        manEmpMaleRadioButton.setSelected(false);
        manEmpFemaleRadioButton.setSelected(false);
        manEmpOtherRadioButton.setSelected(false);
        manEmpPhoneText.setText("");
        manEmpEmailText.setText("");
        manEmpAddressText.setText("");
        manEmpUsernameText.setText("");
        manEmpPasswordText.setText("");
        manEmpBirthText.setCalendar(null);
        
        manEmpUpdateButton.setVisible(false);
        manEmpDeleteButton.setVisible(false);
        manEmpCreateButton.setVisible(true);
    }//GEN-LAST:event_manEmpUpdateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JTextField manEmpAddressText;
    private com.toedter.calendar.JDateChooser manEmpBirthText;
    private javax.swing.JButton manEmpCreateButton;
    private javax.swing.JButton manEmpDeleteButton;
    private javax.swing.JTextField manEmpEmailText;
    private javax.swing.JRadioButton manEmpFemaleRadioButton;
    private javax.swing.JRadioButton manEmpMaleRadioButton;
    private javax.swing.JTextField manEmpNameText;
    private javax.swing.JRadioButton manEmpOtherRadioButton;
    private javax.swing.JPasswordField manEmpPasswordText;
    private javax.swing.JTextField manEmpPhoneText;
    private javax.swing.JComboBox<String> manEmpRoleCombo;
    private javax.swing.JTextField manEmpSSNText;
    private javax.swing.JButton manEmpUpdateButton;
    private javax.swing.JTextField manEmpUsernameText;
    private javax.swing.JButton manEmpViewButton;
    private javax.swing.JTable tblEmployee;
    // End of variables declaration//GEN-END:variables

private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);
        List<Person> persons = operatingSystem.getPersonDirectory().stream()
            .filter( x -> UserRole.valueOf(x.getRole()).equals(UserRole.APPROVAL_EMPLOYEE) || UserRole.valueOf(x.getRole()).equals(UserRole.ASSEMBLER)||UserRole.valueOf(x.getRole()).equals(UserRole.FULFILMENT_OFFICER))
            .toList();
         
        for (Person person : persons){

            Object[] row =  new Object[8];
            row[0] = person.getName();
            row[1] = person.getRole();
            row[2] = person.getEmail();
            row[3] = person.getPhoneNo();

            model.addRow(row);


        }
        
    }

}