/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.backend.Db4oUtils;
import model.backend.OperatingSystem;
import model.regulator.Report;
import model.root.Person;
import model.manufacturer.Weapon;

/**
 *
 * @author pho3nix28
 */
public class WeaponApprovalJPanel extends javax.swing.JPanel {
    
    OperatingSystem operatingSystem;
    Db4oUtils dB4OUtility;
    /**
     * Creates new form WeaponApprovalJPanel
     */
    public WeaponApprovalJPanel(){
        
    }
    public WeaponApprovalJPanel(OperatingSystem operatingSystem,Db4oUtils dB4OUtility) {
        initComponents();
        this.operatingSystem = operatingSystem;
        this.dB4OUtility = dB4OUtility;
        populateTable();
        populateReportTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        weaponReportTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        weaponAppSelectButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        weaponAppWeaponListTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        weaponAppApprovalGunCombo = new javax.swing.JComboBox<>();
        weaponAppNameText = new javax.swing.JTextField();
        weaponAppSubmitButton = new javax.swing.JButton();
        weaponReportSelectButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(32, 33, 35));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Weapon Approval Management");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Weapon List:");

        weaponReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ReportID", "Test 1", "Test 2", "Test 3", "Test 4", "Test 5", "Approved"
            }
        ));
        jScrollPane1.setViewportView(weaponReportTable);

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        weaponAppSelectButton.setBackground(new java.awt.Color(126, 87, 194));
        weaponAppSelectButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        weaponAppSelectButton.setForeground(new java.awt.Color(255, 255, 255));
        weaponAppSelectButton.setText("Select");
        weaponAppSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weaponAppSelectButtonActionPerformed(evt);
            }
        });

        weaponAppWeaponListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "WeaponID", "Name", "Type", "ReportID"
            }
        ));
        jScrollPane2.setViewportView(weaponAppWeaponListTable);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Approve Gun?");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" ID:");

        weaponAppApprovalGunCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        weaponAppNameText.setEditable(false);

        weaponAppSubmitButton.setBackground(new java.awt.Color(126, 87, 194));
        weaponAppSubmitButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        weaponAppSubmitButton.setForeground(new java.awt.Color(255, 255, 255));
        weaponAppSubmitButton.setText("Submit");
        weaponAppSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weaponAppSubmitButtonActionPerformed(evt);
            }
        });

        weaponReportSelectButton.setBackground(new java.awt.Color(126, 87, 194));
        weaponReportSelectButton.setFont(new java.awt.Font("Copperplate", 1, 13)); // NOI18N
        weaponReportSelectButton.setForeground(new java.awt.Color(255, 255, 255));
        weaponReportSelectButton.setText("Select");
        weaponReportSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weaponReportSelectButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Report List:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(weaponAppSubmitButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(weaponAppNameText)
                                    .addComponent(weaponAppApprovalGunCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 264, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(weaponReportSelectButton)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weaponAppSelectButton)
                        .addGap(41, 41, 41))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(192, 192, 192)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(weaponAppSelectButton)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(weaponReportSelectButton)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(weaponAppNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(weaponAppApprovalGunCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(weaponAppSubmitButton)
                .addContainerGap(198, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(90, 90, 90)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(556, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void weaponAppSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weaponAppSelectButtonActionPerformed
        // TODO add your handling code here:
        int selected = weaponAppWeaponListTable.getSelectedRow();
        List<Weapon> weapon = operatingSystem.getWeaponDirectory().stream().toList();
        Weapon w = weapon.get(selected);
        
        populateReportTable(w);
        
    }//GEN-LAST:event_weaponAppSelectButtonActionPerformed

    private void weaponReportSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weaponReportSelectButtonActionPerformed
        // TODO add your handling code here:
        int selected = weaponReportTable.getSelectedRow();
        List<Report> report = operatingSystem.getReportDirectory().stream().toList();
        Report r = report.get(selected);
        
        weaponAppNameText.setText(r.getReportId());
        weaponAppApprovalGunCombo.setSelectedItem("No");
    }//GEN-LAST:event_weaponReportSelectButtonActionPerformed

    private void weaponAppSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weaponAppSubmitButtonActionPerformed
        // TODO add your handling code here:
        boolean approved = false;
        String approve = String.valueOf(weaponAppApprovalGunCombo.getSelectedItem());
        String reportId = weaponAppNameText.getText();
        
        Report report = operatingSystem.getReportDirectory().stream()
                .filter(r-> r.getReportId().equals(reportId)).findFirst().orElse(null);

        if(approve == "Yes"){
                report.setApproved(true);
        }else{
            report.setApproved(false);
        }
        
        JOptionPane.showMessageDialog(this, "Data Created");
        populateReportTable();
        weaponAppNameText.setText("");
        weaponAppApprovalGunCombo.setSelectedItem("No");
        
        
    }//GEN-LAST:event_weaponAppSubmitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> weaponAppApprovalGunCombo;
    private javax.swing.JTextField weaponAppNameText;
    private javax.swing.JButton weaponAppSelectButton;
    private javax.swing.JButton weaponAppSubmitButton;
    private javax.swing.JTable weaponAppWeaponListTable;
    private javax.swing.JButton weaponReportSelectButton;
    private javax.swing.JTable weaponReportTable;
    // End of variables declaration//GEN-END:variables
private void populateTable(){
    
    DefaultTableModel model = (DefaultTableModel) weaponAppWeaponListTable.getModel();
        model.setRowCount(0);
        List<Weapon> weapons = operatingSystem.getWeaponDirectory();
         
        for (Weapon weapon : weapons){

            Object[] row =  new Object[8];
            row[0] = weapon.getWeaponId();
            row[1] = weapon.getName();
            row[2] = weapon.getType();
            row[3] = weapon.getReportId();

            model.addRow(row);


        }
        
    }
private void populateReportTable(){
    
    DefaultTableModel model = (DefaultTableModel) weaponReportTable.getModel();
    model.setRowCount(0);
    List<Report> reports = operatingSystem.getReportDirectory();
            
        for(Report report: reports){
            Object[] row =  new Object[8];
            row[0] = report.getReportId();
            row[1] = report.isTest1();
            row[2] = report.isTest2();
            row[3] = report.isTest3();
            row[4] = report.isTest4();
            row[5] = report.isTest5();
            row[6] = report.isApproved();

            model.addRow(row);
        }
    }

private void populateReportTable(Weapon w){
    
    DefaultTableModel model = (DefaultTableModel) weaponReportTable.getModel();
    model.setRowCount(0);
    List<Report> reports = operatingSystem.getReportDirectory().stream()
            .filter(r -> r.getReportId().equals(w.getReportId())).toList();
    if(reports.size() == 0){
        model.setRowCount(0);
    }else{
        for(Report report: reports){
            Object[] row =  new Object[8];
            row[0] = report.getReportId();
            row[1] = report.isTest1();
            row[2] = report.isTest2();
            row[3] = report.isTest3();
            row[4] = report.isTest4();
            row[5] = report.isTest5();
            row[6] = report.isApproved();

            model.addRow(row);
        }
    }
}
        
}

