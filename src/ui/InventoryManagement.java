/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.backend.Db4oUtils;
import model.backend.OperatingSystem;
import model.dealer.Inventory;
import model.dealer.Store;
import model.dealer.StoreManager;
import model.manufacturer.Weapon;
import model.root.Dealer;
import model.root.Enterprise;
import model.root.Order;

/**
 *
 * @author pho3nix28
 */
public class InventoryManagement extends javax.swing.JPanel {
    
    OperatingSystem operatingSystem;
    Db4oUtils dB4OUtility;
    StoreManager storeManager;
    private List<Weapon> weaponsList;
    /**
     * Creates new form InventoryManagement1
     */
    public InventoryManagement(Db4oUtils db ,OperatingSystem os, StoreManager storeManager) {
        initComponents();
        this.operatingSystem = os;
        this.dB4OUtility = db;
        populateTable();
        populateWeapons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryManInventorySearchTable = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inventoryManWeaponNameCombo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        inventoryManQuantityText = new javax.swing.JTextField();
        inventoryManOrderButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(32, 33, 35));
        setPreferredSize(new java.awt.Dimension(648, 800));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inventory Management");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Inventory List:");

        inventoryManInventorySearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "WeaponID", "Name", "Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(inventoryManInventorySearchTable);

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Restock Weapons:");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Weapon Name:");

        inventoryManWeaponNameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inventoryManWeaponNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryManWeaponNameComboActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Quantity:");

        inventoryManOrderButton.setBackground(new java.awt.Color(126, 87, 194));
        inventoryManOrderButton.setFont(new java.awt.Font("Copperplate", 1, 14)); // NOI18N
        inventoryManOrderButton.setForeground(new java.awt.Color(255, 255, 255));
        inventoryManOrderButton.setText("Order");
        inventoryManOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryManOrderButtonActionPerformed(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(inventoryManOrderButton)
                                .addGap(287, 287, 287))
                            .addComponent(jSeparator3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inventoryManWeaponNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(91, 91, 91)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inventoryManQuantityText, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(inventoryManWeaponNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(inventoryManQuantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(inventoryManOrderButton)
                .addContainerGap(315, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inventoryManWeaponNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryManWeaponNameComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryManWeaponNameComboActionPerformed

    private void inventoryManOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryManOrderButtonActionPerformed
        // TODO add your handling code here:
        String selectedWeaponName = (String)inventoryManWeaponNameCombo.getSelectedItem();
        if(selectedWeaponName == null){
            JOptionPane.showMessageDialog(inventoryManWeaponNameCombo, "Please eelect a weapon");
            return;
        }
        String weaponId = weaponsList.stream().filter(weapon -> weapon.getName().equals(selectedWeaponName)).findFirst().orElse(null).getWeaponId();
        int quantity = Integer.parseInt(inventoryManQuantityText.getText());
        
        Dealer dealer = (Dealer) operatingSystem.getEnterpriseDirectory().stream()
                        .filter(e -> Enterprise.EnterpriseType.valueOf(e.getEnterpriseType()).equals(Enterprise.EnterpriseType.DEALER))
                        .findFirst()
                        .orElse(null);
        
        Order order = new Order(UUID.randomUUID().toString(), storeManager.getManagingStoreId(), dealer.getEnterpriseId(), null, null,weaponId, quantity, Order.OrderStatus.REQUESTED.name());
        
        operatingSystem.getOrderDirectory().add(order);
        dB4OUtility.storeSystem(operatingSystem);
        
        inventoryManWeaponNameCombo.setSelectedIndex(-1);
        inventoryManQuantityText.setText("");
    }//GEN-LAST:event_inventoryManOrderButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable inventoryManInventorySearchTable;
    private javax.swing.JButton inventoryManOrderButton;
    private javax.swing.JTextField inventoryManQuantityText;
    private javax.swing.JComboBox<String> inventoryManWeaponNameCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    // End of variables declaration//GEN-END:variables

    
    private void populateWeapons(){
        weaponsList.forEach(weapon -> {
            System.out.println(weapon.getName());
            inventoryManWeaponNameCombo.addItem(weapon.getName());
        });
        
    }
    
private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) inventoryManInventorySearchTable.getModel();
        model.setRowCount(0);
        Store store = operatingSystem.getStoreDirectory().stream()
                .filter(s -> s.getId().equals(storeManager.getManagingStoreId()))
                .findFirst().orElse(null);
        Inventory inventory = store.getInventory();
         
        for (Map.Entry<Weapon,Integer> entry : inventory.getWeaponsList().entrySet()){

            Object[] row =  new Object[8];
            row[0] = entry.getKey();
            row[1] = entry.getKey().getName();
            row[2] = entry.getKey().getType();
            row[3] = entry.getValue();

            model.addRow(row);


        }
        
    }

    
}
